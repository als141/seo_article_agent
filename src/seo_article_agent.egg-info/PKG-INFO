Metadata-Version: 2.4
Name: seo_article_agent
Version: 0.2.0
Summary: MCP対応AIエージェントがSEO最適化された人間らしい記事を作成します。
Author-email: Your Name <you@example.com>
Requires-Python: >=3.12
Description-Content-Type: text/markdown
Requires-Dist: openai>=1.75.0
Requires-Dist: openai-agents>=0.0.11
Requires-Dist: tiktoken>=0.5.2
Requires-Dist: beautifulsoup4>=4.12.3
Requires-Dist: readability-lxml>=0.8.1
Requires-Dist: aiohttp>=3.9.5
Requires-Dist: lxml[html-clean]>=5.3.2
Requires-Dist: python-slugify>=8.0.1
Requires-Dist: fastmcp>=0.4.3
Provides-Extra: dev
Requires-Dist: ruff; extra == "dev"
Requires-Dist: pytest; extra == "dev"
Requires-Dist: httpx; extra == "dev"

# SEO Article Agent 🚀

This project provides a fully‑functional AI agent based on the **OpenAI Agents SDK (≥ 0.0.11)** and the latest **Responses API** that can research, plan, draft, and refine SEO‑optimized blog posts for a given company website.

## Quick Start

```bash
# 1. Install uv if you don't already have it
pip install uv

# 2. Create & sync a Python 3.12 virtual env (Ubuntu 24)
uv venv
uv sync

# 3. Add your OpenAI API key
export OPENAI_API_KEY="sk‑..."

# 4. Run the agent (interactive CLI)
seo-agent https://example.com/ -n "Example Inc."
```

You can pass additional flags such as `-t` for a preferred topic, `-l` for target language, or let the agent decide everything automatically.

## How It Works

1. **Site Crawl → Vector Store**  
   The agent fetches the public pages of the target domain, extracts readable text, and stores it in an OpenAI Vector Store for later semantic search.

2. **Topic Ideation**  
   Using the collected context plus (optional) user hints, the agent proposes multiple high‑impact article angles and keywords.

3. **Outline & Draft Generation**  
   For each approved topic, the agent expands an outline and creates several draft variants. All generations use `client.responses.create(...)` to leverage hosted tools like `web_search` and the vector store.

4. **SEO Scoring & Refinement**  
   Generated drafts are benchmarked with an internal SEO checklist (length, keyword density, sentiment, headline structure, …). The best draft is iteratively refined until it beats a target score, then delivered.

5. **Human‑like Polishing**  
   A final pass reduces AI “tells”, inserting varied sentence lengths and idiomatic phrases to keep the text natural.

## Directory Structure

```
seo_article_agent/
  pyproject.toml
  README.md
  .env.template
  src/
    seo_agent/
      __init__.py
      config.py
      tools.py
      agent.py
      cli.py
```

---

Built with ❤️ and the latest OpenAI tooling.
